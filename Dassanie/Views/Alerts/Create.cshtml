@model Dassanie.Models.AlertVM

@{
    ViewData["Title"] = "Create Alert";
}

<h1>Create Alert</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div class="form-group">
                <label class="control-label">Target User</label>
                <input id="FollowerName" name="FollowerName" />
                <input id="FollowerId" name="FollowerId" type="hidden"/>
            </div>
            
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IncludeLink" /> @Html.DisplayNameFor(model => model.IncludeLink)
                </label>
            </div>
            <div class="form-group">
                <label class="control-label">Trigger Words</label>
                <input type="text"  name= "TriggerWords" placeholder="Seperate trigger words with a space" />
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
                @if (!string.IsNullOrEmpty(Model.Error))
                {
                    <span style="color:red;"> @Model.Error</span>
                }
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
<script>
    $(function () {
        $("#FollowerName").change(function () {
            console.log($("#FollowerName").val());
        });
            $("#FollowerName").autocomplete({
                source: "../api/FollowerAPI",
                minLength: 3,
                focus: function (event, ui) {
                    $("#FollowerName").val(ui.item.screenNameResponse);
                },
                select: function (event, ui) {
                    console.log(ui);
                    console.log(ui.item);
                    console.log(ui.item.screenNameResponse);
                    $("#FollowerName").val(ui.item.screenNameResponse);
                    $("#FollowerId").val(ui.item.userIDResponse);
                    return false;
                    
                }
            })
                .autocomplete("instance")._renderItem = function (ul, item) {
                    return $("<li>")
                        .append("<div><img src='" + item.profileImageUrlHttps + "' alt='" + item.screenNameResponse + "' /> " + item.screenNameResponse + "</div>")
                        .appendTo(ul);
                };
        }

        );
</script>
}
