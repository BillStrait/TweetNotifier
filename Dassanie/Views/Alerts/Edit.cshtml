@model Dassanie.Models.AlertVM

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Alert</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="AlertId" />
            <label class="control-label">Target User</label>
            <input name="followerName" disabled="disabled" value="@Model.FollowerName" />

            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IncludeLink" /> @Html.DisplayNameFor(model => model.IncludeLink)
                </label>
            </div>
            <div class="form-group form-check">
                <input class="form-check-input" asp-for="AlwaysAlert" /> <span>Alert for all tweets </span>s
            </div>
            <div class="form-group">
                <label class="control-label">Trigger Words</label>
                <input type="text" name="TriggerWords" value="@Model.AlertWords" />
            </div>

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
            <div class="form-group">
                @if (!string.IsNullOrEmpty(Model.Error))
                {
                    <span style="color:red;"> @Model.Error</span>
                }
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
